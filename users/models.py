from django.db.models import CharField, TextField, ImageField, DateTimeField, EmailField
from django.contrib.auth.models import AbstractUser
from django.contrib.auth.validators import ASCIIUsernameValidator
from django.core.validators import MinLengthValidator
from django.urls import reverse
from django.utils.translation import gettext_lazy as _

from phonenumber_field.modelfields import PhoneNumberField


class User(AbstractUser):
    """
    –ë–∞–∑–æ–≤–∞ –ø–æ–≤–Ω–æ—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞ –º–æ–¥–µ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å–∏—Å—Ç–µ–º—ñ.
    """
    username = CharField(
        _('Username'),
        max_length=40,
        unique=True,
        help_text=_(
            'Required. 40 characters or fewer. Letters, digits and @/./+/-/_ only.'),
        validators=[ASCIIUsernameValidator(), MinLengthValidator(3)],
        error_messages={'unique': _(
            'A user with that username already exists.'), },
    )
    email = EmailField('–ü–æ—à—Ç–∞ Email', unique=True)
    description = TextField(
        '–û–ø–∏—Å –ø—Ä–æ—Ñ—ñ–ª—é', max_length=500, blank=True, null=True)
    birthday_date = DateTimeField('–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è',
                                  blank=True, null=True)
    phone_number = PhoneNumberField(
        '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É', region='UA', blank=True, null=True)
    avatar = ImageField(
        '–ê–≤–∞—Ç–∞—Ä', upload_to='images/users/avatar', blank=True, null=True)
    profile_bg = ImageField(
        '–§–æ–Ω', upload_to='images/users/profile_bg', blank=True, null=True)
    activation_key = CharField(
        '–°–µ–∫—Ä–µ—Ç–Ω–∏–π –∫–æ–¥', max_length=80, blank=True, null=True)

    EMAIL_FIELD = 'email'
    USERNAME_FIELD = 'email'
    REQUIRED_FIELDS = ['username']

    class Meta():
        db_table = 'users'
        verbose_name = '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'
        verbose_name_plural = 'üî¥ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ'
        ordering = ('date_joined',)

    def __str__(self):
        return self.username

    def get_absolute_url(self):
        return reverse('user:detail', kwargs={'username': self.username})
