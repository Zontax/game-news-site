from django.db.models import Model, CharField, TextField, ImageField, DateTimeField, DateField, EmailField, OneToOneField, CASCADE
from django.contrib.auth.models import AbstractUser
from django.contrib.auth.validators import ASCIIUsernameValidator
from django.core.validators import MinLengthValidator
from django.utils.translation import gettext_lazy as _
from django.urls import reverse

from app.settings import AUTH_USER_MODEL
from phonenumber_field.modelfields import PhoneNumberField


def user_avatar_path(instance: 'User', filename):
    return f'images/users/{instance.id}/avatar/{filename}'


def user_profile_bg_path(instance: 'User', filename):
    return f'images/users/{instance.id}/profile_bg/{filename}'


class User(AbstractUser):
    """
    –ë–∞–∑–æ–≤–∞ –ø–æ–≤–Ω–æ—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞ –º–æ–¥–µ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å–∏—Å—Ç–µ–º—ñ.
    """
    username = CharField(
        _('Username'),
        max_length=40,
        unique=True,
        help_text=_(
            'Required. 40 characters or fewer. Letters, digits and @/./+/-/_ only.'),
        validators=[ASCIIUsernameValidator(), MinLengthValidator(3)],
        error_messages={'unique': _(
            'A user with that username already exists.'), },
    )
    email = EmailField('–ü–æ—à—Ç–∞ Email', unique=True)
    description = TextField('–û–ø–∏—Å –ø—Ä–æ—Ñ—ñ–ª—é', max_length=500,
                            blank=True, null=True)
    birthday_date = DateTimeField('–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è',
                                  blank=True, null=True)
    phone_number = PhoneNumberField('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É', region='UA',
                                    blank=True, null=True)
    avatar = ImageField('–ê–≤–∞—Ç–∞—Ä', upload_to=user_avatar_path,
                        blank=True, null=True)
    profile_bg = ImageField('–§–æ–Ω', upload_to=user_profile_bg_path,
                            blank=True, null=True)
    activation_key = CharField('–°–µ–∫—Ä–µ—Ç–Ω–∏–π –∫–æ–¥', max_length=80,
                               blank=True, null=True)

    EMAIL_FIELD = 'email'
    USERNAME_FIELD = 'email'
    REQUIRED_FIELDS = ['username']

    class Meta():
        db_table = 'users'
        verbose_name = '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'
        verbose_name_plural = 'üî¥ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ'
        ordering = ('date_joined',)

    def __str__(self):
        return self.username

    def get_absolute_url(self):
        return reverse('user:detail', args=[self.username])


# class Profile(Model):
#     user = OneToOneField(AUTH_USER_MODEL, on_delete=CASCADE)
#     date_of_birth = DateField(blank=True, null=True)
#     photo = ImageField(upload_to='users/%Y/%m/%d/', blank=True)

#     class Meta():
#         db_table = 'profiles'
#         verbose_name = '–ü—Ä–æ—Ñ—ñ–ª—å'
#         verbose_name_plural = 'üü• –ü—Ä–æ—Ñ—ñ–ª—ñ'
#         ordering = ('date_joined',)

#     def __str__(self):
#         return f'–ü—Ä–æ—Ñ—ñ–ª—å [{self.user.username}]'
